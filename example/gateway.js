// Generated by CoffeeScript 1.6.3
(function() {
  var app, binding, current_id, emitters, fs, handler, io, net, socket_server;

  handler = function(req, res) {
    return fs.readFile(__dirname + '/index.html', function(err, data) {
      if (err) {
        res.writeHead(500);
        return res.end('Error loading index.html');
      }
      res.writeHead(200);
      return res.end(data);
    });
  };

  app = require('http').createServer(handler);

  net = require('net');

  io = require('socket.io').listen(8081);

  fs = require('fs');

  emitters = {};

  current_id = 0;

  binding = function(id, string) {};

  app.listen(8080);

  socket_server = net.createServer(function(conn) {
    var current_binding;
    current_binding = binding;
    binding = function(id, string) {
      conn.write(id + ' ' + string);
      return current_binding(id, string);
    };
    return conn.on('data', function(data) {
      var id, message, str;
      str = data.toString();
      id = Number(str.slice(0, str.indexOf(' ')));
      message = str.slice(str.indexOf(' ') + 1);
      return emitters[id](message);
    });
  });

  socket_server.listen(9001);

  io.sockets.on('connection', function(socket) {
    var id;
    id = null;
    socket.on('identify', function(data) {
      if (id in emitters) {
        return socket.emit('identify', {
          error: 'I.D. conflict'
        });
      } else {
        id = data.id;
        emitters[id] = function(message) {
          return socket.emit('message', {
            message: message
          });
        };
        console.log(JSON.stringify(emitters));
        return socket.emit('identify', {
          success: true
        });
      }
    });
    return socket.on('message', function(data) {
      if (id != null) {
        binding(id, data.message);
        return socket.emit('confirm', {
          success: true
        });
      } else {
        return socket.emit('confirm', {
          error: 'No given I.D.'
        });
      }
    });
  });

}).call(this);
